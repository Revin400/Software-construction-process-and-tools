name: .NET with Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          docker compose -f NewWarehouse/docker-compose.yml up -d

      # Wait for services to be ready
      - name: Wait for services
        run: |
          echo "Waiting briefly for services to stabilize..."
          sleep 30

      # Set up .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore NewWarehouse

      # Build the target program
      - name: Build the program
        run: dotnet build --no-restore NewWarehouse

      # Run the target program
      - name: Run the target program
        run: |
          dotnet run --project NewWarehouse &
          echo "Waiting for the application to start..."
          sleep 30

      # Restore dependencies for tests
      - name: Restore test dependencies
        run: dotnet restore Testing

      # Build the test project
      - name: Build tests
        run: dotnet build --no-restore Testing

      # Run tests
      - name: Test
        run: dotnet test --no-build --verbosity normal Testing

      # Clean up Docker services
      - name: Clean up Docker Compose
        if: always()
        run: |
          docker compose -f NewWarehouse/docker-compose.yml down
